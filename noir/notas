noir tiene un template project mas simple/limpio. Es decir, no tiene 1 millon de carpetas con lib/target etc.

`nargo prove` genera la prueba en un archivo <nombre-del-proyecto>.proof. `nargo verify` para... verificarla xd

La clasica desventaja de noir es que es un lenguaje aparte en vez de un framework hecho sobre Rust.

Para generar una prueba con diferentes inputs, podes crear varios .toml files y cuando corres nargo prove pasas el flag --prover-name o -p.



cosas incomodas de noir como lenguaje: 
* No permite arrays de tama√±o arbitrario como input en funciones en general.
* No permite hacer break en un for en funciones que no sean unconstrained.
